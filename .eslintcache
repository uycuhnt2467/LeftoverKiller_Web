[{"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\actions\\favorite.js":"1","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\App.js":"2","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\reducers\\favorite.js":"3","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\actions\\ingredients.js":"4","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\hoc\\Auxx\\Auxx.js":"5","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Navigation\\Toolbar\\Toolbar.js":"6","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\UI\\Button\\Button.js":"7","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\UI\\Spinner\\Spinner.js":"8","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js":"9","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"10","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\index.js":"11","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\actions\\index.js":"12","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\hoc\\Layout\\Layout.js":"13","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Auth\\Logout\\Logout.js":"14","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Auth\\Auth.js":"15","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\SearchByIngredient\\SearchByIngredient.js":"16","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\SearchByRecipe\\SearchByRecipe.js":"17","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Favorite\\Favorite.js":"18","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\reducers\\auth.js":"19","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\reducers\\ingredients.js":"20","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\actions\\actionTypes.js":"21","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\UI\\Input\\Input.js":"22","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\UI\\Backdrop\\Backdrop.js":"23","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\actions\\auth.js":"24","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Recipe\\Recipe.js":"25","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\utility.js":"26","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Logo\\Logo.js":"27","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Navigation\\SideDrawer\\DrawerToggle\\DrawerToggle.js":"28","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Pantry\\Pantry.js":"29","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Navigation\\SideDrawer\\SideDrawer.js":"30","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Ingredient\\Ingredient.js":"31","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\root.js":"32","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Auth\\Clear\\Clear.js":"33"},{"size":4569,"mtime":1608996266866,"results":"34","hashOfConfig":"35"},{"size":3799,"mtime":1608994511326,"results":"36","hashOfConfig":"35"},{"size":2461,"mtime":1608996695337,"results":"37","hashOfConfig":"35"},{"size":4841,"mtime":1608996659468,"results":"38","hashOfConfig":"35"},{"size":61,"mtime":1608117958187,"results":"39","hashOfConfig":"35"},{"size":691,"mtime":1609058823112,"results":"40","hashOfConfig":"35"},{"size":301,"mtime":1608473992069,"results":"41","hashOfConfig":"35"},{"size":177,"mtime":1608473472410,"results":"42","hashOfConfig":"35"},{"size":1046,"mtime":1608994590969,"results":"43","hashOfConfig":"35"},{"size":400,"mtime":1608473716830,"results":"44","hashOfConfig":"35"},{"size":1781,"mtime":1608825748531,"results":"45","hashOfConfig":"35"},{"size":682,"mtime":1608996545178,"results":"46","hashOfConfig":"35"},{"size":1399,"mtime":1609058787090,"results":"47","hashOfConfig":"35"},{"size":543,"mtime":1608994422417,"results":"48","hashOfConfig":"35"},{"size":6505,"mtime":1608997501811,"results":"49","hashOfConfig":"35"},{"size":5367,"mtime":1608947895572,"results":"50","hashOfConfig":"35"},{"size":4909,"mtime":1608947853973,"results":"51","hashOfConfig":"35"},{"size":2295,"mtime":1608955673058,"results":"52","hashOfConfig":"35"},{"size":1484,"mtime":1608915098557,"results":"53","hashOfConfig":"35"},{"size":2262,"mtime":1608996719213,"results":"54","hashOfConfig":"35"},{"size":1460,"mtime":1608965249539,"results":"55","hashOfConfig":"35"},{"size":1794,"mtime":1608473996548,"results":"56","hashOfConfig":"35"},{"size":293,"mtime":1609058169960,"results":"57","hashOfConfig":"35"},{"size":3351,"mtime":1608996738952,"results":"58","hashOfConfig":"35"},{"size":4726,"mtime":1608956523935,"results":"59","hashOfConfig":"35"},{"size":137,"mtime":1608118401982,"results":"60","hashOfConfig":"35"},{"size":338,"mtime":1609058863532,"results":"61","hashOfConfig":"35"},{"size":275,"mtime":1608117914740,"results":"62","hashOfConfig":"35"},{"size":4880,"mtime":1608995812469,"results":"63","hashOfConfig":"35"},{"size":908,"mtime":1609058913749,"results":"64","hashOfConfig":"35"},{"size":4716,"mtime":1608996512620,"results":"65","hashOfConfig":"35"},{"size":645,"mtime":1608825806258,"results":"66","hashOfConfig":"35"},{"size":539,"mtime":1608994725332,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1gifdg5",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"75"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"75"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"89"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\actions\\favorite.js",[],["145","146"],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\App.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\reducers\\favorite.js",[],["147","148"],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\actions\\ingredients.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\hoc\\Auxx\\Auxx.js",[],["149","150"],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Navigation\\Toolbar\\Toolbar.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\UI\\Spinner\\Spinner.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js",[],["151","152"],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\index.js",["153"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n// persist store\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport \"./index.module.css\";\nimport App from \"./App\";\n// import burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\n// import orderReducer from \"./store/reducers/order\";\n// import authReducer from \"./store/reducers/auth\";\n// import ingredientsReducer from \"./store/reducers/ingredients\";\n// import favoriteReducer from \"./store/reducers/favorite\";\nimport RootReducerr from \"./store/root\"\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// const rootReducer = combineReducers({\n//     ingredientsReducer: ingredientsReducer,\n//     favoriteReducer: favoriteReducer,\n//     authReducer: authReducer,\n// });\n\nconst rootReducer = RootReducerr;\n\n\nconst myReducer = persistReducer(\n    {\n        key: \"root\",\n        storage,\n    },\n    rootReducer\n);\n// const store = createStore(\n//     rootReducer,\n//     composeEnhancers(applyMiddleware(thunk))\n// );\nconst store = createStore(myReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst persistor = persistStore(store);\n\nconst app = (\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </PersistGate>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n// registerServiceWorker();\n","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\actions\\index.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\hoc\\Layout\\Layout.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Auth\\Logout\\Logout.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Auth\\Auth.js",["154"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport classes from \"./Auth.module.css\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            username: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Username\",\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            email: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"email\",\r\n                    placeholder: \"Mail Address\",\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            password: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"password\",\r\n                    placeholder: \"Password\",\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n        },\r\n        isSignup: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        // if (!this.props.buildingBurger && this.props.authRedirectPath !== \"/\") {\r\n        //     this.props.onSetAuthRedirectPath();\r\n        // }\r\n        // this.props.onAuthStart()\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== \"\" && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(\r\n                    event.target.value,\r\n                    this.state.controls[controlName].validation\r\n                ),\r\n                touched: true,\r\n            },\r\n        };\r\n        this.setState({ controls: updatedControls });\r\n    };\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state.controls.username.value);\r\n        console.log(this.state.controls.password.value);\r\n        this.props.onAuth(\r\n            this.state.controls.username.value,\r\n            \"\",\r\n            this.state.controls.password.value,\r\n            this.state.isSignup\r\n        );\r\n    };\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { isSignup: !prevState.isSignup };\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key],\r\n            });\r\n        }\r\n\r\n        let form = formElementsArray.map((formElement) => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) =>\r\n                    this.inputChangedHandler(event, formElement.id)\r\n                }\r\n            />\r\n        ));\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />;\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = <p>{this.props.error.message}</p>;\r\n        }\r\n\r\n        let authRedircet = null;\r\n        if (this.props.isAuthenticated) {\r\n            // authRedircet = <Redirect to={this.props.authRedirectPath} />;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedircet}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button clicked={this.switchAuthModeHandler} btnType=\"Danger\">\r\n                    SWITCH TO {this.state.isSignup ? \"SIGN IN\" : \"SIGN UP\"}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.authReducer.loading,\r\n        error: state.authReducer.error,\r\n        isAuthenticated: state.authReducer.token !== null,\r\n        authRedirectPath: state.authReducer.authRedirectPath,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuth: (username, email, password, isSignup) =>\r\n            dispatch(actions.auth(username, email, password, isSignup)),\r\n        // onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\")),\r\n        onAuthStart: () => {\r\n            dispatch(actions.authStart());\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n// export default Auth;\r\n","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\SearchByIngredient\\SearchByIngredient.js",["155"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Aux from \"../../hoc/Auxx/Auxx\";\r\n\r\n// import OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n// import withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport axios from \"axios\";\r\n\r\nclass SearchIngredient extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        allIngredients: [\r\n            // {\r\n            //     ingredient_id: \"\",\r\n            //     ingredient_name: \"\",\r\n            //     img_url: \"\",\r\n            // },\r\n        ],\r\n        currentIngredients: [\r\n            // {\r\n            //     ingredient_id: \"\",\r\n            //     ingredient_name: \"\",\r\n            //     img_url: \"\",\r\n            // },\r\n        ],\r\n        currentQuery: \"\",\r\n        loading: true,\r\n        success: false,\r\n        // err: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        // const cors = \"https://cors-anywhere.herokuapp.com/\";\r\n        const url = \"http://3.12.253.9:3000/ingredient\";\r\n        axios.get(url).then((res) => {\r\n            if (res.data.result.success) {\r\n                this.setState({\r\n                    success: true,\r\n                    allIngredients: res.data.result.ingredients,\r\n                    currentIngredients: res.data.result.ingredients,\r\n                    loading: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    success: false,\r\n                    allIngredients: [],\r\n                    currentIngredients: [],\r\n                    loading: false,\r\n                });\r\n                console.log(\"no return\");\r\n            }\r\n        });\r\n    }\r\n\r\n    handleIngredientInputChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                currentQuery: e.target.value,\r\n            };\r\n        });\r\n        let newIngredientsResult = this.state.allIngredients.filter((ing) => {\r\n            return ing.ingredient_name\r\n                .toLowerCase()\r\n                .includes(this.state.currentQuery);\r\n        });\r\n\r\n        this.setState((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                currentIngredients: newIngredientsResult,\r\n            };\r\n        });\r\n    };\r\n\r\n    // handleSearchClick = (e) => {\r\n    //     e.preventDefault();\r\n\r\n        \r\n    // };\r\n\r\n    render() {\r\n        let curIngredient = <Spinner />;\r\n        if (!this.state.loading) {\r\n            curIngredient = this.state.currentIngredients.map((val, idx) => {\r\n                return ingredient_info(idx, val);\r\n            });\r\n        }\r\n         \r\n\r\n        return (\r\n            // <Aux>\r\n            //     <input\r\n            //         type=\"text\"\r\n            //         onChange={this.handleIngredientInputChange}\r\n            //         name=\"curSearch\"\r\n            //         placeholder=\"Any Ingredient\"\r\n            //         value={this.state.currentQuery}\r\n            //     ></input>\r\n            //     <button type=\"submit\" onClick={this.handleAddClick}>\r\n            //         Add\r\n            //     </button>\r\n            //     <button type=\"submit\" onClick={this.handleSearchClick}>\r\n            //         Search\r\n            //     </button>\r\n\r\n            //     <h1>Current Ingredient</h1>\r\n            //     {cur_ingredient ? cur_ingredient : null}\r\n\r\n            //     <h1>Found Recipe</h1>\r\n\r\n            //     {found_recipe.length > 0 ? found_recipe : null}\r\n            // </Aux>\r\n            <Aux>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={this.handleIngredientInputChange}\r\n                    name=\"curSearch\"\r\n                    placeholder=\"Any Ingredient\"\r\n                    value={this.state.currentQuery}\r\n                ></input>\r\n                {/* <button type=\"submit\" onClick={this.handleSearchClick}>\r\n                    Search\r\n                </button> */}\r\n                {curIngredient}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n// define components\r\nfunction ingredient_info(key, ingredient_data) {\r\n    let link_string = \"/ingredient/\" + ingredient_data.ingredient_id;\r\n    return (\r\n        <ul key={key}>\r\n            <li>{ingredient_data.ingredient_id}</li>\r\n            <li>{ingredient_data.ingredient_name}</li>\r\n            <li>\r\n                <Link to={link_string}>ingredient link</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ingredient_list: state.ingredientsReducer.ingredients,\r\n    };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         onIngredientAdded: (ingName) =>\r\n//             dispatch(actions.addIngredient(ingName)),\r\n//         onIngredientRemoved: (ingName) =>\r\n//             dispatch(actions.removeIngredient(ingName)),\r\n//     };\r\n// };\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispatchToProps\r\n// )(withErrorHandler(BurgerBuilder, axios));\r\nexport default connect(mapStateToProps, null)(SearchIngredient);\r\n","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\SearchByRecipe\\SearchByRecipe.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Favorite\\Favorite.js",["156"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport Aux from \"../../hoc/Auxx/Auxx\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass Favroite extends Component {\r\n    state = {\r\n        success: false,\r\n        favorite_recipe_info: [\r\n            // {\r\n            //     recipe_id: \"\",\r\n            //     recipe_name: \"\",\r\n            //     img_url: \"\",\r\n            // }\r\n        ],\r\n        error: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.token_id);\r\n        this.props.onInitializeFavorite(this.props.token_id);\r\n        console.log(\"initilaize favorite\");\r\n        console.log(this.props.favorite_recipe);\r\n    }\r\n\r\n    render() {\r\n        let favorite_recipe_info = <Spinner />;\r\n        if (!this.props.loading) {\r\n            if (this.props.favorite_recipe.length === 0) {\r\n                favorite_recipe_info = <h1>No recipe</h1>;\r\n            } else {\r\n                favorite_recipe_info = this.props.favorite_recipe.map(\r\n                    (val, idx) => {\r\n                        return recipe_display(idx, val);\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <Aux>\r\n                <h1>Favorite Recipe</h1>\r\n                {favorite_recipe_info}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst recipe_display = (key, recipe) => {\r\n    let link_string = \"/recipe/\" + recipe.recipe_id;\r\n    return (\r\n        <ul key={key}>\r\n            <li>{recipe.recipe_name}</li>\r\n            <li>\r\n                <Link to={link_string}>recipe link</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        favorite_recipe: state.favoriteReducer.favorite_recipe,\r\n        token_id: state.authReducer.token,\r\n        loading: state.favoriteReducer.loading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onInitializeFavorite: (token_id) => {\r\n            dispatch(actions.authFavorite(token_id));\r\n        },\r\n    };\r\n};\r\n\r\n// export default Recipe;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favroite);\r\n","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\reducers\\auth.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\reducers\\ingredients.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\UI\\Input\\Input.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\UI\\Backdrop\\Backdrop.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\actions\\auth.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Recipe\\Recipe.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\utility.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Logo\\Logo.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Navigation\\SideDrawer\\DrawerToggle\\DrawerToggle.js",[],["157","158"],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Pantry\\Pantry.js",["159"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Aux from \"../../hoc/Auxx/Auxx\";\r\n\r\n// import OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n// import withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport axios from \"axios\";\r\n\r\nclass Pantry extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        // ingredient_list: [\"\"],\r\n        ingredients: [\r\n            // {\r\n            //     recipe_id: \"\",\r\n            //     recipe_name: \"\",\r\n            //     img_url: \"\",\r\n            // },\r\n        ],\r\n        currentQuery: \"\",\r\n        success: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        // const cors = \"https://cors-anywhere.herokuapp.com/\";\r\n        console.log(this.props.token_id);\r\n        this.props.onInitializePantry(this.props.token_id);\r\n        console.log(\"initilaize favorite\");\r\n        console.log(this.props.ingredient_list);\r\n    }\r\n\r\n    handleIngredientInputChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                currentQuery: e.target.value,\r\n            };\r\n        });\r\n    };\r\n\r\n    // handleAddClick = (e) => {\r\n    //     e.preventDefault();\r\n    //     this.props.onIngredientAdded(this.state.currentQuery);\r\n    //     this.setState((prevState) => ({\r\n    //         currentQuery: \"\",\r\n    //     }));\r\n    // };\r\n\r\n    // handleRemoveClick = (e) => {\r\n    //     e.preventDefault();\r\n    //     this.props.onIngredientRemoved(e.target.value);\r\n    // };\r\n\r\n    // handleSearchClick = (e) => {\r\n    //     e.preventDefault();\r\n    //     const cors = \"https://cors-anywhere.herokuapp.com/\";\r\n    //     const url =\r\n    //         \"http://18.222.31.30/leftover_killer/get_matching_recipes.php\";\r\n    //     axios\r\n    //         .post(`${cors}${url}`, { ingredients: this.props.ingredient_list })\r\n    //         .then((res) => {\r\n    //             // http://18.222.31.30/leftover_killer/get_recipes.php\r\n    //             // http://localhost/leftoverkiller2/get_recipes.php\r\n    //             // console.log(res.data);\r\n    //             const recipes = res.data.recipes;\r\n    //             // console.log(recipes);\r\n    //             if (res.data.success) {\r\n    //                 this.setState({\r\n    //                     success: res.data.success,\r\n    //                     matching_recipe: recipes,\r\n    //                 });\r\n    //             } else {\r\n    //                 console.log(\"no return\");\r\n    //             }\r\n\r\n    //             //\r\n    //         });\r\n    // };\r\n\r\n    render() {\r\n        let cur_ingredient = <Spinner />;\r\n\r\n        if (!this.props.loading) {\r\n            if (this.props.ingredient_list.length === 0) {\r\n                cur_ingredient = <h1>No ingredient</h1>;\r\n            } else {\r\n                cur_ingredient = this.props.ingredient_list.map((val) => {\r\n                    return ingredient_display(val.ingredient_id, val);\r\n                });\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <h1>Current Ingredient</h1>\r\n                {cur_ingredient}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst ingredient_display = (key, ingredient) => {\r\n    let link_string = \"/ingredient/\" + ingredient.ingredient_id;\r\n    const capitalize = (str) => {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    };\r\n    return (\r\n        <ul key={key}>\r\n            <li>{ingredient.ingredient_id}</li>\r\n            <li>\r\n                {ingredient.ingredient_name\r\n                    .split(\" \")\r\n                    .map(capitalize)\r\n                    .join(\" \")}\r\n            </li>\r\n            <li>\r\n                <Link to={link_string}>ingredient link</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ingredient_list: state.ingredientsReducer.ingredients,\r\n        token_id: state.authReducer.token,\r\n        loading: state.ingredientsReducer.loading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIngredientAdded: (ingName) =>\r\n            dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) =>\r\n            dispatch(actions.removeIngredient(ingName)),\r\n        onInitializePantry: (token_id) =>\r\n            dispatch(actions.authPantry(token_id)),\r\n    };\r\n};\r\n\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispatchToProps\r\n// )(withErrorHandler(BurgerBuilder, axios));\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pantry);\r\n","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\components\\Navigation\\SideDrawer\\SideDrawer.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Ingredient\\Ingredient.js",[],"C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\store\\root.js",["160","161","162","163"],"import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// persist store\r\nimport authReducer from \"./reducers/auth\";\r\nimport ingredientsReducer from \"./reducers/ingredients\";\r\nimport favoriteReducer from \"./reducers/favorite\";\r\n\r\nconst appReducer = combineReducers({\r\n    ingredientsReducer: ingredientsReducer,\r\n    favoriteReducer: favoriteReducer,\r\n    authReducer: authReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === \"CLEAR_STORE\") return appReducer(undefined, action);\r\n    return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","C:\\Users\\a8520\\data\\Code\\pythoncode\\online-course\\web\\leftoverkiller\\src\\containers\\Auth\\Clear\\Clear.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"164","replacedBy":"168"},{"ruleId":"166","replacedBy":"169"},{"ruleId":"164","replacedBy":"170"},{"ruleId":"166","replacedBy":"171"},{"ruleId":"164","replacedBy":"172"},{"ruleId":"166","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":5,"column":49,"nodeType":"176","messageId":"177","endLine":5,"endColumn":64},{"ruleId":"174","severity":1,"message":"178","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":18},{"ruleId":"174","severity":1,"message":"179","line":10,"column":13,"nodeType":"176","messageId":"177","endLine":10,"endColumn":20},{"ruleId":"174","severity":1,"message":"180","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":13},{"ruleId":"164","replacedBy":"181"},{"ruleId":"166","replacedBy":"182"},{"ruleId":"174","severity":1,"message":"180","line":11,"column":8,"nodeType":"176","messageId":"177","endLine":11,"endColumn":13},{"ruleId":"174","severity":1,"message":"183","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":21},{"ruleId":"174","severity":1,"message":"184","line":1,"column":23,"nodeType":"176","messageId":"177","endLine":1,"endColumn":38},{"ruleId":"174","severity":1,"message":"185","line":1,"column":40,"nodeType":"176","messageId":"177","endLine":1,"endColumn":47},{"ruleId":"174","severity":1,"message":"186","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],["187"],["188"],["187"],["188"],["187"],["188"],"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'actions' is defined but never used.","'axios' is defined but never used.",["187"],["188"],"'createStore' is defined but never used.","'applyMiddleware' is defined but never used.","'compose' is defined but never used.","'thunk' is defined but never used.","no-global-assign","no-unsafe-negation"]